{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Mathias\\\\IdeaProjects\\\\fnatinflation.github.io\\\\Components\\\\Post.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport firebase from 'firebase';\n\nvar Post =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      posts: []\n    });\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.firestore().collection(\"Matches\").orderBy(\"date\").limit(10).get().then(function (querySnapshot) {\n        var posts = [];\n        querySnapshot.forEach(function (doc) {\n          Matches.push({\n            topic: doc.data().team1,\n            subject: doc.data().team2\n          });\n        });\n\n        _this2.setState({\n          posts: posts\n        });\n      })[\"catch\"](function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"against\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.state.Matches.map(function (v) {\n        return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Team1: \", v.team1, \", Team2: \", v.team2, \", Winner: \", v.winner, \", Date: \", v.date);\n      }));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/Mathias/IdeaProjects/fnatinflation.github.io/Components/Post.js"],"names":["React","firebase","Post","posts","firestore","collection","orderBy","limit","get","then","querySnapshot","forEach","doc","Matches","push","topic","data","team1","subject","team2","setState","error","console","log","state","map","v","winner","date","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,UAArB;;IACMC,I;;;;;;;;;;;;;;;;;;4DACM;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;;;;;;;wCAEY;AAAA;;AAChBF,MAAAA,QAAQ,CACLG,SADH,GAEGC,UAFH,CAEc,SAFd,EAGGC,OAHH,CAGW,MAHX,EAIGC,KAJH,CAIS,EAJT,EAKGC,GALH,GAMGC,IANH,CAMQ,UAAAC,aAAa,EAAI;AACrB,YAAMP,KAAK,GAAG,EAAd;AAEAO,QAAAA,aAAa,CAACC,OAAd,CAAsB,UAASC,GAAT,EAAc;AAClCC,UAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,YAAAA,KAAK,EAAEH,GAAG,CAACI,IAAJ,GAAWC,KADP;AAEXC,YAAAA,OAAO,EAAEN,GAAG,CAACI,IAAJ,GAAWG;AAFT,WAAb;AAID,SALD;;AAOA,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEjB,UAAAA,KAAK,EAALA;AAAF,SAAd;AACD,OAjBH,WAkBS,UAASkB,KAAT,EAAgB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AACD,OApBH;AAqBD;;;6BAEQ;AACP,aACE;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,KAAL,CAAWX,OAAX,CAAmBY,GAAnB,CAAuB,UAAAC,CAAC,EAAI;AAC3B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACUA,CAAC,CAACT,KADZ,eAEUS,CAAC,CAACP,KAFZ,gBAGWO,CAAC,CAACC,MAHb,cAISD,CAAC,CAACE,IAJX,CADF;AAQD,OATA,CADH,CADF;AAcD;;;;EA1CY5B,KAAK,CAAC6B,S;;AA4CzB,eAAe3B,IAAf","sourcesContent":["import React from 'react';\r\nimport firebase from 'firebase'\r\nclass Post extends React.Component {\r\n    state = { posts: [] };\r\n\r\n    componentDidMount() {\r\n        firebase\r\n          .firestore()\r\n          .collection(\"Matches\")\r\n          .orderBy(\"date\")\r\n          .limit(10)\r\n          .get()\r\n          .then(querySnapshot => {\r\n            const posts = [];\r\n    \r\n            querySnapshot.forEach(function(doc) {\r\n              Matches.push({\r\n                topic: doc.data().team1,\r\n                subject: doc.data().team2,\r\n              });\r\n            });\r\n    \r\n            this.setState({ posts });\r\n          })\r\n          .catch(function(error) {\r\n            console.log(\"Error getting documents: \", error);\r\n          });\r\n      }\r\n\r\n      render() {\r\n        return (\r\n          <div id=\"against\">\r\n            {this.state.Matches.map(v => {\r\n              return (\r\n                <p>\r\n                  Team1: {v.team1},\r\n                  Team2: {v.team2},\r\n                  Winner: {v.winner},\r\n                  Date: {v.date}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      }\r\n}\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}